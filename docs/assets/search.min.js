var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function ( e ) { return typeof e } : function ( e ) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, _slicedToArray = function () { function e ( e, n ) { var t = [], r = !0, o = !1, i = void 0; try { for ( var a, s = e[ Symbol.iterator ](); !( r = ( a = s.next() ).done ) && ( t.push( a.value ), !n || t.length !== n ); r = !0 ); } catch ( e ) { o = !0, i = e } finally { try { !r && s.return && s.return() } finally { if ( o ) throw i } } return t } return function ( n, t ) { if ( Array.isArray( n ) ) return n; if ( Symbol.iterator in Object( n ) ) return e( n, t ); throw new TypeError( "Invalid attempt to destructure non-iterable instance" ) } }(); !function () { function e ( e ) { return e ? g.EXPIRE_KEY + "/" + e : g.EXPIRE_KEY } function n ( e ) { return e ? g.INDEX_KEY + "/" + e : g.INDEX_KEY } function t ( e ) { var n = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" }; return String( e ).replace( /[&<>"'\/]/g, function ( e ) { return n[ e ] } ) } function r ( e ) { var n = []; return Docsify.dom.findAll( ".sidebar-nav a:not(.section-link):not([data-nosearch])" ).forEach( function ( t ) { var r = t.href, o = t.getAttribute( "href" ), i = e.parse( r ).path; i && -1 === n.indexOf( i ) && !Docsify.util.isAbsolutePath( o ) && n.push( i ) } ), n } function o ( e, n, t ) { localStorage.setItem( n, Date.now() + e ), localStorage.setItem( t, JSON.stringify( b ) ) } function i ( e, n, t, r ) { void 0 === n && ( n = "" ); var o, i = window.marked.lexer( n ), a = window.Docsify.slugify, s = {}; return i.forEach( function ( n ) { if ( "heading" === n.type && n.depth <= r ) o = t.toURL( e, { id: a( n.text ) } ), s[ o ] = { slug: o, title: n.text, body: "" }; else { if ( !o ) return; s[ o ] ? s[ o ].body ? s[ o ].body += "\n" + ( n.text || "" ) : s[ o ].body = n.text : s[ o ] = { slug: o, title: "", body: "" } } } ), a.clear(), s } function a ( e ) { var n = [], r = []; Object.keys( b ).forEach( function ( e ) { r = r.concat( Object.keys( b[ e ] ).map( function ( n ) { return b[ e ][ n ] } ) ) } ), e = e.trim(); var o = e.split( /[\s\-ï¼Œ\\\/]+/ ); 1 !== o.length && ( o = [].concat( e, o ) ); for ( var i = 0; i < r.length; i++ )!function ( e ) { var i = r[ e ], a = 0, s = "", c = i.title && i.title.trim(), d = i.body && i.body.trim(), l = i.slug || ""; if ( c && ( o.forEach( function ( e ) { var n = new RegExp( e.replace( /[|\\{}()[\]^$+*?.]/g, "\\$&" ), "gi" ), r = -1, o = -1; if ( r = c ? c.search( n ) : -1, o = d ? d.search( n ) : -1, r >= 0 || o >= 0 ) { a += r >= 0 ? 3 : o >= 0 ? 2 : 0, o < 0 && ( o = 0 ); var i = 0, l = 0; i = o < 11 ? 0 : o - 10, l = 0 === i ? 70 : o + e.length + 60, l > d.length && ( l = d.length ); var f = "..." + t( d ).substring( i, l ).replace( n, '<em class="search-keyword">' + e + "</em>" ) + "..."; s += f } } ), a > 0 ) ) { var f = { title: t( c ), content: d ? s : "", url: l, score: a }; n.push( f ) } }( i ); return n.sort( function ( e, n ) { return n.score - e.score } ) } function s ( t, a ) { var s = "auto" === t.paths, c = e( t.namespace ), d = n( t.namespace ), l = localStorage.getItem( c ) < Date.now(); if ( b = JSON.parse( localStorage.getItem( d ) ), l ) b = {}; else if ( !s ) return; var f = s ? r( a.router ) : t.paths, u = f.length, p = 0; f.forEach( function ( e ) { if ( b[ e ] ) return p++; Docsify.get( a.router.getFile( e ), !1, a.config.requestHeaders ).then( function ( n ) { b[ e ] = i( e, n, a.router, t.depth ), u === ++p && o( t.maxAge, c, d ) } ) } ) } function c () { Docsify.dom.style( "\n.sidebar {\n  padding-top: 0;\n}\n\n.search {\n  margin-bottom: 20px;\n  padding: 6px;\n  border-bottom: 1px solid #eee;\n}\n\n.search .input-wrap {\n  display: flex;\n  align-items: center;\n}\n\n.search .results-panel {\n  display: none;\n}\n\n.search .results-panel.show {\n  display: block;\n}\n\n.search input {\n  outline: none;\n  border: none;\n  width: 100%;\n  padding: 0 7px;\n  line-height: 36px;\n  font-size: 14px;\n  border: 1px solid transparent;\n}\n\n.search input:focus {\n  box-shadow: 0 0 5px var(--theme-color, #42b983);\n  border: 1px solid var(--theme-color, #42b983);\n}\n\n.search input::-webkit-search-decoration,\n.search input::-webkit-search-cancel-button,\n.search input {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n.search .clear-button {\n  width: 36px;\n  text-align: right;\n  display: none;\n}\n\n.search .clear-button.show {\n  display: block;\n}\n\n.search .clear-button svg {\n  transform: scale(.5);\n}\n\n.search h2 {\n  font-size: 17px;\n  margin: 10px 0;\n}\n\n.search a {\n  text-decoration: none;\n  color: inherit;\n}\n\n.search .matching-post {\n  border-bottom: 1px solid #eee;\n}\n\n.search .matching-post:last-child {\n  border-bottom: 0;\n}\n\n.search p {\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.search p.empty {\n  text-align: center;\n}\n\n.app-name.hide, .sidebar-nav.hide {\n  display: none;\n}" ) } function d ( e ) { void 0 === e && ( e = "" ); var n = '<div class="input-wrap">\n      <input type="search" value="' + e + '" aria-label="Search text" />\n      <div class="clear-button">\n        <svg width="26" height="24">\n          <circle cx="12" cy="12" r="11" fill="#ccc" />\n          <path stroke="white" stroke-width="2" d="M8.25,8.25,15.75,15.75" />\n          <path stroke="white" stroke-width="2"d="M8.25,15.75,15.75,8.25" />\n        </svg>\n      </div>\n    </div>\n    <div class="results-panel"></div>\n    </div>', t = Docsify.dom.create( "div", n ), r = Docsify.dom.find( "aside" ); Docsify.dom.toggleClass( t, "search" ), Docsify.dom.before( r, t ) } function l ( e ) { var n = Docsify.dom.find( "div.search" ), t = Docsify.dom.find( n, ".results-panel" ), r = Docsify.dom.find( n, ".clear-button" ), o = Docsify.dom.find( ".sidebar-nav" ), i = Docsify.dom.find( ".app-name" ); if ( !e ) return t.classList.remove( "show" ), r.classList.remove( "show" ), t.innerHTML = "", void ( v.hideOtherSidebarContent && ( o.classList.remove( "hide" ), i.classList.remove( "hide" ) ) ); var s = a( e ), c = ""; s.forEach( function ( e ) { var n = e.title, t = e.url; if ( n.indexOf( " :id" ) > -1 ) { var r = n.split( " :id=" ), o = _slicedToArray( r, 2 ), i = o[ 0 ], a = o[ 1 ]; n = i, t = t.slice( 0, t.indexOf( "?id=" ) ) + "?id=" + a } c += '<div class="matching-post">\n<a href="' + t + '">\n<h2>' + n + "</h2>\n<p>" + e.content + "</p>\n</a>\n</div>" } ), t.classList.add( "show" ), r.classList.add( "show" ), t.innerHTML = c || '<p class="empty">' + x + "</p>", v.hideOtherSidebarContent && ( o.classList.add( "hide" ), i.classList.add( "hide" ) ) } function f () { var e, n = Docsify.dom.find( "div.search" ), t = Docsify.dom.find( n, "input" ), r = Docsify.dom.find( n, ".input-wrap" ); Docsify.dom.on( n, "click", function ( e ) { return "A" !== e.target.tagName && e.stopPropagation() } ), Docsify.dom.on( t, "input", function ( n ) { clearTimeout( e ), e = setTimeout( function ( e ) { return l( n.target.value.trim() ) }, 100 ) } ), Docsify.dom.on( r, "click", function ( e ) { "INPUT" !== e.target.tagName && ( t.value = "", l() ) } ) } function u ( e, n ) { var t = Docsify.dom.getNode( '.search input[type="search"]' ); if ( t ) if ( "string" == typeof e ) t.placeholder = e; else { var r = Object.keys( e ).filter( function ( e ) { return n.indexOf( e ) > -1 } )[ 0 ]; t.placeholder = e[ r ] } } function p ( e, n ) { if ( "string" == typeof e ) x = e; else { var t = Object.keys( e ).filter( function ( e ) { return n.indexOf( e ) > -1 } )[ 0 ]; x = e[ t ] } } function h ( e ) { v = e } function y ( e, n ) { var t = n.router.parse().query.s; h( e ), c(), d( t ), f(), t && setTimeout( function ( e ) { return l( t ) }, 500 ) } function m ( e, n ) { h( e ), u( e.placeholder, n.route.path ), p( e.noData, n.route.path ) } var v, b = {}, g = { EXPIRE_KEY: "docsify.search.expires", INDEX_KEY: "docsify.search.index" }, x = "", w = { placeholder: "Type to search", noData: "No Results!", paths: "auto", depth: 2, maxAge: 864e5, hideOtherSidebarContent: !1, namespace: void 0 }, D = function ( e, n ) { var t = Docsify.util, r = n.config.search || w; Array.isArray( r ) ? w.paths = r : "object" === ( void 0 === r ? "undefined" : _typeof( r ) ) && ( w.paths = Array.isArray( r.paths ) ? r.paths : "auto", w.maxAge = t.isPrimitive( r.maxAge ) ? r.maxAge : w.maxAge, w.placeholder = r.placeholder || w.placeholder, w.noData = r.noData || w.noData, w.depth = r.depth || w.depth, w.hideOtherSidebarContent = r.hideOtherSidebarContent || w.hideOtherSidebarContent, w.namespace = r.namespace || w.namespace ); var o = "auto" === w.paths; e.mounted( function ( e ) { y( w, n ), !o && s( w, n ) } ), e.doneEach( function ( e ) { m( w, n ), o && s( w, n ) } ) }; $docsify.plugins = [].concat( D, $docsify.plugins ) }();